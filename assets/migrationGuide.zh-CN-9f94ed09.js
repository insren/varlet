import{_ as n,b as i,e as a,m as r,p as e,q as l,w as s,Q as o,Z as t}from"./index-95102025.js";const h={components:{}},_={class:"varlet-site-doc"},p=e("h1",null,"迁移指南",-1),u={class:"card"},m={id:"介绍"},g=e("p",null,[o("本节主要介绍 "),e("code",null,"2.x"),o(" 版本相对于 "),e("code",null,"1.x"),o(" 版本的主要变化以及迁移的注意事项。")],-1),f=e("h2",null,"组件库(@varlet/ui)",-1),j={class:"card"},v={id:"组件重构"},y=t('<ul><li>Menu 组件进行了重做，优化了 api 使其变得更易使用，在桌面端也有更优秀的边界检测能力和性能。具体使用方式参考 <a href="#/zh-CN/menu">Menu 文档</a>，</li><li>Select 组件的下拉菜单替换成了新版 Menu 组件</li><li>Pagination 组件的下拉菜单替换成了新版 Menu 组件</li><li>Loading 组件的默认颜色从 <code>currentColor</code> 更改为 <code>var(--color-primary)</code></li><li>Loading 组件暴露出 <code>var(--loading-color)</code></li><li>Button 组件新增 <code>loadingColor</code> 属性</li><li>Snackbar 组件新增 <code>loadingColor</code> 属性</li><li>Progress 组件新增 <code>labelClass</code> 属性</li><li>StyleProvider 组件新增 <code>tag</code> 属性，允许自定义容器标签</li><li>Cell 组件重命名了部分 api <code>desc</code> -&gt; <code>description</code>，<code>descClass</code> -&gt; <code>descriptionClass</code></li><li>DatePicker 组件重命名了部分 api <code>shadow</code> -&gt; <code>elevation</code></li><li>TimePicker 组件重命名了部分 api <code>shadow</code> -&gt; <code>elevation</code></li><li>Card 组件重命名了部分 api <code>height</code> -&gt; <code>image-height</code>，<code>content</code> -&gt; <code>floating-content</code></li><li>Col 组件新增 <code>direction</code> 属性</li><li>Dialog 组件新增 <code>width</code> 属性</li><li>Form 组件新增 <code>useForm</code> 和 <code>useValidation</code> 静态方法以提供自定义表单组件的能力</li></ul>',1),k={class:"card"},w={id:"组件样式变量变更"},x=t("<ul><li>Menu 组件变量新增 <code>--menu-background-color</code></li><li>Select 组件变量新增 <code>--select-select-min-height</code>，<code>--select-menu-margin-top</code></li><li>Pagination 组件变量新增 <code>--pagination-simple-padding</code></li><li>Loading 组件变量新增 <code>--loading-color</code></li><li>Rate 组件变量新增 <code>--rate-color</code></li><li>Counter 组件变量新增 <code>--counter-disabled-opacity</code></li><li>Slider 组件变量新增 <code>--slider-disabled-opacity</code></li><li>Switch 组件变量新增 <code>--switch-disabled-opacity</code></li><li>Cell 组件变量重命名 <code>--cell-desc-font-size</code> -&gt; <code>--cell-description-font-size</code>，<code>--cell-desc-color</code> -&gt; <code>--cell-description-color</code></li><li>Form 组件变量重命名 <code>--form-details-error-color</code> -&gt; <code>--form-details-error-message-color</code>， <code>--form-details-length-color</code> -&gt; <code>--form-details-extra-message-color</code></li></ul>",1),S={class:"card"},M={id:"UMD 模块导出中英文语言包"},C=e("p",null,[o("在 "),e("code",null,"1.x"),o(" 版本中，UMD 模块不导出中英文语言包，在 "),e("code",null,"2.x"),o(" 版本中，我们将中英文语言包进行了导出， 非 UMD 模块现在有两种使用语言包的方式。")],-1),U=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { Locale } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" enUS "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui/es/locale/en-US'"),o(`

Locale.add(`),e("span",{class:"hljs-string"},"'en-US'"),o(`, enUS)
`)])],-1),D=e("p",null,"或",-1),b=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { Locale } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`

Locale.add(`),e("span",{class:"hljs-string"},"'en-US'"),o(`, Locale.enUS)
`)])],-1),P={class:"card"},T={id:"UMD 模块导出暗黑模式主题"},L=e("p",null,[o("在 "),e("code",null,"1.x"),o(" 版本中，UMD 模块不导出暗黑模式主题包，在 "),e("code",null,"2.x"),o(" 版本中，我们将暗黑模式主题包进行了导出， 非 UMD 模块现在有两种使用暗黑模式主题的方式。")],-1),N=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { StyleProvider } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" dark "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui/es/themes/dark'"),o(`

StyleProvider(dark)
`)])],-1),B=e("p",null,"或",-1),z=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(" { StyleProvider, Themes } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`

StyleProvider(Themes.dark)
`)])],-1),V={class:"card"},$={id:"移除 less 主题变量的支持"},A=e("p",null,[o("如今 "),e("code",null,"css variable"),o(" 方案已经十分成熟，在 "),e("code",null,"2.x"),o(" 版本中不再支持 "),e("code",null,"less"),o(" 主题变量，这有利于减小包的发布体积。 如果您使用了在构建时替换 "),e("code",null,"less"),o(" 主题变量的方案，需要替换成 "),e("code",null,"css variable"),o(" 方案。")],-1),F={class:"card"},q={id:"Typescript 类型优化"},E=e("p",null,[o("我们对组件内部类型进行了重构，抽象了更多的类型并且暴露了出来，组件的类型规范依照"),e("code",null,"组件名"),o(" + "),e("code",null,"类型名"),o("的形式。使用方式如下所示:")],-1),G=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-keyword"},"import"),o(),e("span",{class:"hljs-keyword"},"type"),o(" { ButtonProps, ButtonType, ButtonSize } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/ui'"),o(`
`)])],-1),O={class:"card"},Q={id:"支持自动引入函数组件"},R=e("p",null,[o("在 1.x 中，组件库只支持自动引入在模板中的声明式组件，函数组件 "),e("code",null,"(例如: Snackbar)"),o(" 仍然需要手动引入样式文件。 在 2.x 中，通过 "),e("a",{href:"https://github.com/antfu/unplugin-auto-import"},"unplugin-auto-import"),o(" 插件支持了函数组件的自动引入。 详情见"),e("a",{href:"#/zh-CN/importOnDemand"},"按需引入"),o("。")],-1),Z=e("h2",null,"组件库快速成型工具(@varlet/cli)",-1),H={class:"card"},I={id:"命令重构"},J=t("<ul><li>重构了 <code>gen</code> 和 <code>create</code> 命令，增加了 <code>sfc</code> 和 <code>tsx</code> 两种风格的模板选择，增加了国际化的选项，优化了命令行交互体验</li><li>重构了 <code>compile</code> 命令，编译后的包不再支持 <code>less</code> 变量</li><li>新增 <code>vite:dev</code> 和 <code>vite:build</code> 命令，对 <code>vite</code> 进行了基本的封装</li></ul>",1),K={class:"card"},W={id:"文档相关"},X=e("ul",null,[e("li",null,"新的文档首页"),e("li",null,"优化了文档视觉"),e("li",null,"文档样式变量进行了一些重命名")],-1),Y={class:"card"},ee={id:"其他改变"},oe=e("ul",null,[e("li",null,[e("code",null,"Node.js"),o(" 版本锁定为 "),e("code",null,"^14.18.0 || >=16.0.0")]),e("li",null,[o("文档配置文件从 "),e("code",null,"varlet.config.js"),o(" -> "),e("code",null,"varlet.config.mjs")]),e("li",null,"内置方法引入方式改变")],-1),le=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-comment"},"// 1.x"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" AppType "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/cli/site/mobile/components/AppType'"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" { watchLang, watchDarkMode } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/cli/site/utils'"),o(`
`)])],-1),se=e("pre",{class:"hljs"},[e("code",null,[e("span",{class:"hljs-comment"},"// 2.x"),o(`
`),e("span",{class:"hljs-keyword"},"import"),o(" { AppType, watchLang, watchDarkMode } "),e("span",{class:"hljs-keyword"},"from"),o(),e("span",{class:"hljs-string"},"'@varlet/cli/client'"),o(`
`)])],-1);function ce(de,te,ie,ne,ae,re){const c=i("router-link"),d=i("var-site-code-example");return a(),r("div",_,[p,e("div",u,[e("h3",m,[l(c,{to:"#介绍"},{default:s(()=>[o("#")]),_:1}),o("介绍")]),g]),f,e("div",j,[e("h3",v,[l(c,{to:"#组件重构"},{default:s(()=>[o("#")]),_:1}),o("组件重构")]),y]),e("div",k,[e("h3",w,[l(c,{to:"#组件样式变量变更"},{default:s(()=>[o("#")]),_:1}),o("组件样式变量变更")]),x]),e("div",S,[e("h3",M,[l(c,{to:"#UMD 模块导出中英文语言包"},{default:s(()=>[o("#")]),_:1}),o("UMD 模块导出中英文语言包")]),C,l(d,{"playground-ignore":""},{default:s(()=>[U]),_:1}),D,l(d,{"playground-ignore":""},{default:s(()=>[b]),_:1})]),e("div",P,[e("h3",T,[l(c,{to:"#UMD 模块导出暗黑模式主题"},{default:s(()=>[o("#")]),_:1}),o("UMD 模块导出暗黑模式主题")]),L,l(d,{"playground-ignore":""},{default:s(()=>[N]),_:1}),B,l(d,{"playground-ignore":""},{default:s(()=>[z]),_:1})]),e("div",V,[e("h3",$,[l(c,{to:"#移除 less 主题变量的支持"},{default:s(()=>[o("#")]),_:1}),o("移除 less 主题变量的支持")]),A]),e("div",F,[e("h3",q,[l(c,{to:"#Typescript 类型优化"},{default:s(()=>[o("#")]),_:1}),o("Typescript 类型优化")]),E,l(d,{"playground-ignore":""},{default:s(()=>[G]),_:1})]),e("div",O,[e("h3",Q,[l(c,{to:"#支持自动引入函数组件"},{default:s(()=>[o("#")]),_:1}),o("支持自动引入函数组件")]),R]),Z,e("div",H,[e("h3",I,[l(c,{to:"#命令重构"},{default:s(()=>[o("#")]),_:1}),o("命令重构")]),J]),e("div",K,[e("h3",W,[l(c,{to:"#文档相关"},{default:s(()=>[o("#")]),_:1}),o("文档相关")]),X]),e("div",Y,[e("h3",ee,[l(c,{to:"#其他改变"},{default:s(()=>[o("#")]),_:1}),o("其他改变")]),oe,l(d,null,{default:s(()=>[le]),_:1}),l(d,null,{default:s(()=>[se]),_:1})])])}const _e=n(h,[["render",ce]]);export{_e as default};
